<?php

namespace gamboamartin\inmuebles\models;

use base\orm\_modelo_parent;
use gamboamartin\comercial\models\com_cliente;
use gamboamartin\errores\errores;
use PDO;
use stdClass;


class inm_rel_comprador_com_cliente extends _modelo_parent{
    public function __construct(PDO $link)
    {
        $tabla = 'inm_rel_comprador_com_cliente';
        $columnas = array($tabla=>false,'inm_comprador'=>$tabla,'com_cliente'=>$tabla);

        $campos_obligatorios = array('inm_comprador_id','com_cliente_id');

        $columnas_extra= array();
        $renombres= array();

        $atributos_criticos = array('inm_comprador_id','com_cliente_id');

        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, columnas_extra: $columnas_extra, renombres: $renombres,
            atributos_criticos: $atributos_criticos);

        $this->NAMESPACE = __NAMESPACE__;
        $this->etiqueta = 'Relacion comprador cliente';
    }

    public function alta_bd(array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {

        $keys = array('com_cliente_id','inm_comprador_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro',data:  $valida);
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $this->registro['com_cliente_id'];
            $descripcion .= ' '.$this->registro['inm_comprador_id'];
            $this->registro['descripcion'] = $descripcion;
        }


        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }


        return $r_alta_bd;

    }

    /**
     * Obtiene la relacion entre cliente de facturacion y comprador de inmuebles
     * @param int $inm_comprador_id Identificador de comprador
     * @return array
     * @version 1.110.1
     */
    final public function imp_rel_comprador_com_cliente(int $inm_comprador_id): array
    {
        if($inm_comprador_id <= 0){
            return $this->error->error(mensaje: 'Error inm_comprador_id es menor a 0', data:  $inm_comprador_id);
        }

        $filtro['inm_comprador.id'] = $inm_comprador_id;

        $r_imp_rel_comprador_com_cliente = $this->filtro_and(filtro:$filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener imp_rel_comprador_com_cliente',
                data:  $r_imp_rel_comprador_com_cliente);
        }

        if($r_imp_rel_comprador_com_cliente->n_registros === 0){
            return $this->error->error(
                mensaje: 'Error no existe inm_rel_comprador_com_cliente',data:  $r_imp_rel_comprador_com_cliente);
        }

        if($r_imp_rel_comprador_com_cliente->n_registros > 1){
            return $this->error->error(
                mensaje: 'Error de integridad existe mas de un inm_rel_comprador_com_cliente',
                data:  $r_imp_rel_comprador_com_cliente);
        }

        return $r_imp_rel_comprador_com_cliente->registros[0];
    }


}