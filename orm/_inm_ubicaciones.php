<?php

namespace gamboamartin\inmuebles\models;

use base\orm\_modelo_parent;
use gamboamartin\errores\errores;
use stdClass;

class _inm_ubicaciones extends _modelo_base_paquete {

    /**
     * Inserta un registro de tipo ubicaciones
     * @param array $keys_integra_ds Keys para integracion de descripcion select
     * @return array|stdClass
     * @version 2.93.0
     */
    public function alta_bd(array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {

        $registro = $this->registro;

        $registro = $this->init_row(key_entidad_base_id: $this->key_id, key_entidad_id: $this->key_entidad_id,
            registro: $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al integrar descripcion',data:  $registro);
        }


        $this->registro = $registro;

        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar ubicacion',data:  $r_alta_bd);
        }

        return $r_alta_bd;
    }

    /**
     * Se tiene que determinar en objeto que hereda
     * @param string $key_entidad_base_id
     * @param string $key_entidad_id
     * @param array $registro Registro en proceso
     * @return array
     * @version 1.45.0
     */
    public function init_row(string $key_entidad_base_id, string $key_entidad_id, array $registro): array
    {
        return $registro;
    }



    /**
     * Valida los elementos base de una inicializacion de ubicacion
     * @param array $registro Registro en proceso
     * @return array|true
     * @version 2.95.0
     */
    final protected function valida_row(array $registro): bool|array
    {
        $keys = array('dp_calle_pertenece_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al valida $registro',data:  $valida);
        }

        $keys = array('numero_exterior');
        $valida = $this->validacion->valida_existencia_keys(keys: $keys,registro:  $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al valida $registro',data:  $valida);
        }
        return true;
    }

}