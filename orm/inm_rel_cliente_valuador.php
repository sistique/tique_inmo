<?php

namespace gamboamartin\inmuebles\models;

use base\orm\_modelo_parent;
use gamboamartin\errores\errores;
use gamboamartin\gastos\models\gt_proveedor;
use PDO;


class inm_rel_cliente_valuador extends _modelo_parent{
    public function __construct(PDO $link)
    {
        $tabla = 'inm_rel_cliente_valuador';
        $columnas = array($tabla=>false,'inm_valuador'=>$tabla,'gt_proveedor'=>'inm_valuador','com_cliente'=>$tabla);

        $campos_obligatorios = array();

        $columnas_extra= array();
        $renombres= array();

        $atributos_criticos = array();

        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, columnas_extra: $columnas_extra, renombres: $renombres,
            atributos_criticos: $atributos_criticos);

        $this->NAMESPACE = __NAMESPACE__;
        $this->etiqueta = 'Valuadores';
    }

    public function alta_bd(array $keys_integra_ds = array('codigo', 'descripcion')): array|\stdClass
    {
        $keys = array('com_cliente_id','inm_valuador_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro',data:  $valida);
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $this->registro['com_cliente_id'];
            $descripcion .= ' '.$this->registro['inm_valuador_id'];
            $this->registro['descripcion'] = $descripcion;
        }

        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }

        $filtro_exi['inm_comprador.id'] = $this->registro['inm_comprador_id'];
        $filtro_exi['inm_status_comprador.id'] = 3;
        $existe = (new inm_bitacora_status_comprador(link: $this->link))->existe(filtro: $filtro_exi);
        if (errores::$error) {
            $this->link->rollBack();
            return $this->error->error(mensaje: 'Error al obtener datos de bitacora', data: $existe);
        }

        if(!$existe) {
            $registro_alta = array();
            $registro_alta['inm_comprador_id'] = $this->registro['inm_comprador_id'];
            $registro_alta['inm_status_comprador_id'] = 3;
            $registro_alta['fecha_status'] = date('Y-m-d\TH:i:s');
            $r_inm_bitacora_status_comprador = (new inm_bitacora_status_comprador(link: $this->link))->alta_registro(
                registro: $registro_alta);
            if (errores::$error) {
                $this->link->rollBack();
                return $this->error->error(mensaje: 'Error al insertar datos', data: $r_inm_bitacora_status_comprador);
            }
        }

        return $r_alta_bd;

    }

}