<?php
namespace gamboamartin\proceso\models;
use base\orm\_modelo_parent_sin_codigo;

use gamboamartin\administrador\models\adm_accion;
use gamboamartin\errores\errores;
use PDO;
use stdClass;

class pr_etapa_proceso extends _modelo_parent_sin_codigo {
    public function __construct(PDO $link){
        $tabla = 'pr_etapa_proceso';
        $columnas = array($tabla=>false,'pr_etapa'=>$tabla,'pr_proceso'=>$tabla,'pr_tipo_proceso'=>'pr_proceso',
            'adm_accion'=>$tabla,'adm_seccion'=>'adm_accion');
        $campos_obligatorios = array();

        parent::__construct(link: $link,tabla:  $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas);

        $this->NAMESPACE = __NAMESPACE__;
    }

    public function alta_bd(array $keys_integra_ds = array('descripcion')): array|stdClass
    {
        $keys = array('pr_proceso_id','pr_etapa_id','adm_accion_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro',data: $valida);
        }

        $pr_proceso = (new pr_proceso(link: $this->link))->registro(registro_id: $this->registro['pr_proceso_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener proceso',data: $pr_proceso);
        }
        $pr_etapa = (new pr_etapa(link: $this->link))->registro(registro_id: $this->registro['pr_etapa_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener etapa',data: $pr_etapa);
        }
        $adm_accion = (new adm_accion(link: $this->link))->registro(registro_id: $this->registro['adm_accion_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener adm_accion',data: $adm_accion);
        }

        if(!isset($this->registro['codigo'])){
            $codigo = $pr_proceso->pr_proceso_codigo.$pr_etapa->pr_etapa_codigo.$adm_accion->adm_accion_codigo;
            $this->registro['codigo'] = $codigo;
        }
        if(!isset($this->registro['descripcion'])){
            $descripcion = $pr_proceso->pr_proceso_descripcion.' '.$pr_etapa->pr_etapa_descripcion.' '.$adm_accion->adm_accion_descripcion;
            $this->registro['descripcion'] = $descripcion;
        }

        $filtro['pr_proceso.id'] = $this->registro['pr_proceso_id'];
        $filtro['pr_etapa.id'] = $this->registro['pr_etapa_id'];

        $existe = $this->existe(filtro: $filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar si existe',data: $existe);
        }

        if(!$existe) {
            $r_alta_bd = parent::alta_bd($keys_integra_ds); // TODO: Change the autogenerated stub
            if (errores::$error) {
                return $this->error->error(mensaje: 'Error al dar de alta registro', data: $r_alta_bd);
            }
        }
        else{
            $r_pr_etapa_proceso = $this->filtro_and(filtro: $filtro);
            if (errores::$error) {
                return $this->error->error(mensaje: 'Error al obtener registro', data: $r_pr_etapa_proceso);
            }
            $registro = $r_pr_etapa_proceso->registros[0];

            $registro_id = $registro['pr_etapa_proceso_id'];
            $registro_puro = $this->registro(registro_id: $registro_id,columnas_en_bruto: true,retorno_obj: true);
            if (errores::$error) {
                return $this->error->error(mensaje: 'Error al obtener registro', data: $registro_puro);
            }

            $data = $this->data_result_transaccion(mensaje: 'Registro insertado con Ã©xito', registro: $registro,
                registro_ejecutado: $this->registro, registro_id: $registro_id, registro_original: $this->registro,
                registro_puro: $registro_puro, sql: 'Registro previamente insertado');
            if(errores::$error){
                return $this->error->error(mensaje: 'Error al maquetar respuesta registro', data: $registro);
            }
            $r_alta_bd = $data;

        }
        return $r_alta_bd;
    }
}