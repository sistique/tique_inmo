<?php

namespace gamboamartin\facturacion\models;

use base\orm\_modelo_parent_sin_codigo;
use gamboamartin\comercial\models\com_email_cte;
use gamboamartin\errores\errores;
use gamboamartin\notificaciones\models\not_receptor;
use PDO;
use stdClass;


class fc_receptor_email extends _modelo_parent_sin_codigo
{
    public function __construct(PDO $link)
    {
        $tabla = 'fc_receptor_email';
        $columnas = array($tabla => false, 'not_receptor' => $tabla, 'com_email_cte' => $tabla,
            'com_cliente'=>'com_email_cte');
        $campos_obligatorios = array('not_receptor_id', 'com_email_cte_id');

        $columnas_extra = array();



        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas,  columnas_extra: $columnas_extra);

        $this->NAMESPACE = __NAMESPACE__;

        $this->etiqueta = 'Correos ligados';
    }

    public function alta_bd(array $keys_integra_ds = array('descripcion')): array|stdClass
    {

        $keys = array('not_receptor_id','com_email_cte_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro',data:  $valida);
        }

        $not_receptor = (new not_receptor(link: $this->link))->registro(registro_id: $this->registro['not_receptor_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener not_receptor',data:  $not_receptor);
        }

        $com_email_cte = (new com_email_cte(link: $this->link))->registro(registro_id: $this->registro['com_email_cte_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener factura',data:  $com_email_cte);
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $not_receptor['not_receptor_email'].' '.$com_email_cte['com_email_cte_descripcion'];
            $this->registro['descripcion'] = $descripcion;
        }
        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }
        return $r_alta_bd;

    }


}