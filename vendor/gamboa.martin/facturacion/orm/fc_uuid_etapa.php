<?php
namespace gamboamartin\facturacion\models;
use base\orm\_modelo_parent;


use gamboamartin\errores\errores;
use gamboamartin\proceso\models\pr_etapa_proceso;
use PDO;
use stdClass;


class fc_uuid_etapa extends _modelo_parent {
    public function __construct(PDO $link){
        $tabla = 'fc_uuid_etapa';
        $columnas = array($tabla => false, 'fc_uuid' => $tabla, 'pr_etapa_proceso' => $tabla,
            'pr_etapa' => 'pr_etapa_proceso', 'pr_proceso' => 'pr_etapa_proceso', 'pr_tipo_proceso' => 'pr_proceso');

        $campos_obligatorios = array('codigo','fc_uuid_id','pr_etapa_proceso_id');

        $no_duplicados = array();

        $campos_view = array();


        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, campos_view: $campos_view, columnas_extra: array(),
            no_duplicados: $no_duplicados, tipo_campos: array());

        $this->NAMESPACE = __NAMESPACE__;

        $this->etiqueta = 'Etapa CFDI Externo';

    }

    public function alta_bd(array $keys_integra_ds = array('descripcion','pr_etapa_proceso_id', 'fecha')): array|stdClass
    {
        $pr_etapa_proceso = (new pr_etapa_proceso(link: $this->link))->registro(registro_id: $this->registro['pr_etapa_proceso_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener pr_etapa_proceso',data:  $pr_etapa_proceso);
        }
        $row_entidad = (new fc_uuid(link: $this->link))->registro(registro_id: $this->registro['fc_uuid_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener row_entidad',data:  $row_entidad);
        }


        if(!isset($this->registro['descripcion'])){
            $descripcion = $pr_etapa_proceso->pr_proceso_descripcion.' '.$pr_etapa_proceso->pr_etapa_descripcion.' '.
                $row_entidad->fc_uuid_folio.' '.$this->registro['fecha'];

            $this->registro['descripcion'] = $descripcion;
        }

        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }
        return $r_alta_bd;
    }




}