<?php
namespace gamboamartin\facturacion\models;
use gamboamartin\errores\errores;
use stdClass;

class com_email_cte extends \gamboamartin\comercial\models\com_email_cte {

    final public function alta_bd(array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {
        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar correo',data:  $r_alta_bd);
        }
        $com_email_cte_id = $r_alta_bd->registro_id;

        $com_email_cte = (new com_email_cte(link: $this->link))->registro(registro_id: $com_email_cte_id);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener com_email_cte',data:  $com_email_cte);
        }

        $not_receptor_id = (new _email())->get_not_receptor_id(com_email_cte: $com_email_cte, link: $this->link);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener not_receptor_id',data:  $not_receptor_id);
        }

        $filtro['com_email_cte.id'] = $com_email_cte_id;
        $filtro['not_receptor.id'] = $not_receptor_id;
        $existe_receptor_email = (new fc_receptor_email(link: $this->link))->existe(filtro: $filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar si existe',data:  $existe_receptor_email);
        }
        if(!$existe_receptor_email) {

            $fc_receptor_email_ins['com_email_cte_id'] = $com_email_cte_id;
            $fc_receptor_email_ins['not_receptor_id'] = $not_receptor_id;

            $r_fc_receptor_email = (new fc_receptor_email(link: $this->link))->alta_registro(registro: $fc_receptor_email_ins);
            if (errores::$error) {
                return $this->error->error(mensaje: 'Error al insertar relacion', data: $r_fc_receptor_email);
            }
        }

        return $r_alta_bd;
    }

    public function elimina_bd(int $id): array|stdClass
    {
        $filtro['com_email_cte.id'] = $id;
        $r_fc_receptor_email = (new fc_receptor_email(link: $this->link))->elimina_con_filtro_and(filtro: $filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al eliminar r_fc_receptor_email',data:  $r_fc_receptor_email);
        }

        $r_elimina_bd = parent::elimina_bd(id: $id); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al eliminar',data:  $r_elimina_bd);
        }
        return $r_elimina_bd;
    }



}