<?php
namespace gamboamartin\organigrama\models;
use base\orm\_modelo_parent_sin_codigo;
use gamboamartin\errores\errores;
use PDO;
use stdClass;

class org_ejecuta extends _modelo_parent_sin_codigo{
    public function __construct(PDO $link){
        $tabla = 'org_ejecuta';
        $columnas = array($tabla=>false,'org_puesto'=>$tabla,'org_actividad'=>$tabla,'org_tipo_puesto'=>'org_puesto',
            'org_departamento'=>'org_puesto');
        $campos_obligatorios = array();

        parent::__construct(link: $link,tabla:  $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas);

        $this->etiqueta = 'Ejecuta';

        $this->NAMESPACE = __NAMESPACE__;
    }

    public function alta_bd(array $keys_integra_ds = array('descripcion')): array|stdClass
    {


        $registro = $this->maqueta_descripcion(registro: $this->registro);
        if (errores::$error) {
            return $this->error->error(mensaje: 'Error al integrar registro', data: $registro);
        }

        $this->registro = $registro;

        $r_alta_bd =  parent::alta_bd($keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro', data: $r_alta_bd);
        }
        return $r_alta_bd;
    }

    private function data_parents(array $registro){
        $org_puesto = (new org_puesto(link: $this->link))->registro(registro_id: $registro['org_puesto_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener puesto', data: $org_puesto);
        }
        $org_actividad = (new org_actividad(link: $this->link))->registro(registro_id: $registro['org_actividad_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener org_actividad', data: $org_actividad);
        }
        $data = new stdClass();
        $data->org_puesto = $org_puesto;
        $data->org_actividad = $org_actividad;
        return $data;
    }

    private function descripcion(stdClass $data_parent): string
    {
        return $data_parent->org_puesto['org_puesto_descripcion'].' '.$data_parent->org_actividad['org_actividad_descripcion'];
    }

    private function init_row(int $org_ejecuta_id, array $registro){
        $registro_previo = $this->registro(registro_id: $org_ejecuta_id);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener registro_previo', data: $registro_previo);
        }
        if(!isset($registro['org_puesto_id'])) {
            $registro['org_puesto_id'] = $registro_previo['org_puesto_id'];
        }
        if(!isset($registro['org_actividad_id'])) {
            $registro['org_actividad_id'] = $registro_previo['org_actividad_id'];
        }
        return $registro;

    }

    private function integra_descripcion(stdClass $data_parent, array $registro){
        if(!isset($registro['descripcion'])){
            $descripcion = $this->descripcion(data_parent: $data_parent);
            if (errores::$error) {
                return $this->error->error(mensaje: 'Error al obtener descripcion', data: $descripcion);
            }
            $registro['descripcion'] = $descripcion;
        }
        return $registro;
    }

    private function maqueta_descripcion(array $registro){
        $data_parent = $this->data_parents(registro: $registro);
        if (errores::$error) {
            return $this->error->error(mensaje: 'Error al obtener data_parent', data: $data_parent);
        }

        $registro = $this->integra_descripcion(data_parent: $data_parent,registro:  $registro);
        if (errores::$error) {
            return $this->error->error(mensaje: 'Error al integrar registro', data: $registro);
        }
        return $registro;
    }

    public function modifica_bd(array $registro, int $id, bool $reactiva = false, array $keys_integra_ds = array('descripcion')): array|stdClass
    {
        $registro = $this->init_row(org_ejecuta_id: $id, registro: $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener row previo', data: $registro);
        }

        $registro = $this->maqueta_descripcion(registro: $registro);
        if (errores::$error) {
            return $this->error->error(mensaje: 'Error al integrar registro', data: $registro);
        }


        $r_modifica = parent::modifica_bd(registro: $registro,id:  $id, reactiva: $reactiva,keys_integra_ds:  $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al modificar', data: $r_modifica);
        }
        return $r_modifica;
    }
}