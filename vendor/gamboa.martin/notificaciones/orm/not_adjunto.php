<?php
namespace gamboamartin\notificaciones\models;

use base\orm\_modelo_parent_sin_codigo;

use gamboamartin\documento\models\doc_documento;
use gamboamartin\errores\errores;
use PDO;
use stdClass;

class not_adjunto extends _modelo_parent_sin_codigo {

    public function __construct(PDO $link){
        $tabla = 'not_adjunto';
        $columnas = array($tabla=>false,'not_mensaje'=>$tabla,'doc_documento'=>$tabla,'not_emisor'=>'not_mensaje');
        $campos_obligatorios = array('not_mensaje_id','doc_documento_id');

        $no_duplicados = array();

        $campos_view = array();
        $columnas_extra = array();


        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, campos_view: $campos_view, columnas_extra: $columnas_extra,
            no_duplicados: $no_duplicados, tipo_campos: array());

        $this->NAMESPACE = __NAMESPACE__;

        $this->etiqueta = 'Adjuntos';

    }

    public function alta_bd(array $keys_integra_ds = array('descripcion')): array|stdClass
    {
        $not_mensaje = (new not_mensaje(link: $this->link))->registro(registro_id: $this->registro['not_mensaje_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener not_mensaje',data: $not_mensaje);
        }

        $doc_documento = (new doc_documento(link: $this->link))->registro(registro_id: $this->registro['doc_documento_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener doc_documento',data: $doc_documento);
        }

        if(!file_exists($doc_documento['doc_documento_ruta_absoluta'])){
            return $this->error->error(mensaje: 'Error el documento no existe',data: $doc_documento);
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $not_mensaje['not_emisor_email'].' '.$not_mensaje['not_mensaje_asunto'].' '.
                $doc_documento['doc_documento_descripcion'].' '.date('YmdHis');
            $descripcion.= mt_rand(1000,9999);
            $this->registro['descripcion'] = $descripcion;
        }
        if(!isset($this->registro['name_out'])){
            $this->registro['name_out'] = $this->registro['descripcion'];
        }
        if(!isset($this->registro['codigo'])){
            $codigo = mt_rand(10,99).mt_rand(10,99).mt_rand(10,99).mt_rand(10,99).mt_rand(10,99).mt_rand(10,99);
            $codigo .= mt_rand(10,99).mt_rand(10,99).mt_rand(10,99).mt_rand(10,99).mt_rand(10,99).mt_rand(10,99);
            $codigo .= date('YmdHis');
            $this->registro['codigo'] = $codigo;
        }
        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta mensaje',data: $r_alta_bd);
        }


        return $r_alta_bd;
    }


}