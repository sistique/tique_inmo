<?php
/**
 * @author Kevin AcuÃ±a Vega
 * @version 1.0.0
 * @created 2022-07-07
 * @final En proceso
 *
 */
namespace gamboamartin\notificaciones\controllers;


use gamboamartin\errores\errores;
use gamboamartin\notificaciones\html\not_receptor_html;
use gamboamartin\notificaciones\models\not_receptor;
use gamboamartin\system\_ctl_parent_sin_codigo;
use gamboamartin\system\links_menu;
use gamboamartin\template\html;

use PDO;
use stdClass;

class controlador_not_receptor extends _ctl_parent_sin_codigo {

    public function __construct(PDO $link, html $html = new \gamboamartin\template_1\html(),
                                stdClass $paths_conf = new stdClass()){
        $modelo = new not_receptor(link: $link);
        $html_ = new not_receptor_html(html: $html);
        $obj_link = new links_menu(link: $link, registro_id: $this->registro_id);

        $datatables = $this->init_datatable();
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al inicializar datatable',data: $datatables);
            print_r($error);
            die('Error');
        }

        parent::__construct(html: $html_, link: $link, modelo: $modelo, obj_link: $obj_link, datatables: $datatables,
            paths_conf: $paths_conf);

        $this->titulo_lista = 'Emisores';
    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta = parent::alta(header: $header,ws:  $ws); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta, header: $header,ws:  $ws);
        }

        $this->inputs = new stdClass();

        $email = (new not_receptor_html(html: $this->html_base))->input_email(cols: 12, row_upd: new stdClass(), value_vacio: false);
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $email, header: $header,ws:  $ws);
        }

        $this->inputs->email = $email;



        return $r_alta;
    }

    final public function init_datatable(): stdClass
    {

        $columns["not_receptor_email"]["titulo"] = "Email";

        $filtro = array("not_receptor.email");

        $datatables = new stdClass();
        $datatables->columns = $columns;
        $datatables->filtro = $filtro;

        return $datatables;
    }

    public function modifica(bool $header, bool $ws = false, array $keys_selects = array()): array|stdClass
    {
        $r_modifica = parent::modifica($header, $ws, $keys_selects); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_modifica, header: $header,ws:  $ws);
        }

        $this->inputs = new stdClass();

        $email = (new not_receptor_html(html: $this->html_base))->input_email(cols: 12, row_upd: $this->row_upd, value_vacio: false);
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $email, header: $header,ws:  $ws);
        }

        $this->inputs->email = $email;


        return $r_modifica;
    }


}